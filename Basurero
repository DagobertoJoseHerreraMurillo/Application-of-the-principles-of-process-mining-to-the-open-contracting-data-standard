
Process Mining and Fraud Detection
https://www.semanticscholar.org/paper/Process-Mining-and-Fraud-Detection-Stoop-Oezer/6949a33423051ce6fa5b08fb7d5f06ac9dcc721b





Directorio de carga C:\Users\Dagoberto.Neo4jDesktop\neo4jDatabases\database-f0deac7c-28e7-4fc6-bc3c-0c4ef4bbd86e\installation-3.5.2\import

Guia sobre cómo abrir https://medium.com/neo4j/neo4j-get-off-the-ground-in-30min-or-less-3a226a0d48b1 Guía sobre cómo cargar https://neo4j.com/graphgist/importing-csv-files-with-cypher

#Create companies LOAD CSV WITH HEADERS FROM "file:///companies.csv" AS row CREATE (p:Company {id: (row.id), name: row.name})

#Create contracts LOAD CSV WITH HEADERS FROM "file:///contracts.csv" AS row CREATE (contract:Contract{id:(row.id)})

#Create constrains CREATE CONSTRAINT ON (p:Company) ASSERT p.id IS UNIQUE CREATE CONSTRAINT ON (contract:Contract) ASSERT contract.id IS UNIQUE

#Create relations LOAD CSV WITH HEADERS FROM "file:///relations.csv" AS row MATCH (company:Company { id:(row.company)}),(contract:Contract { id:(row.contract)}) CREATE (company)-[:PARTICIPATED]->(contract)

Unsupervised fraud detection

Association rules

#colusión https://aristeguinoticias.com/1707/lomasdestacado/78-de-contratos-publicos-por-adjudicacion-directa-en-2017-por-licitacion-solo-12-cofece/ https://www.eleconomista.com.mx/empresas/Cofece-investiga-posible-colusion-en-mercado-de-higiene-20180504-0033.html
https://www.eleconomista.com.mx/empresas/Nueve-de-cada-10-contratos-publicos-no-se-licitan-20180717-0050.html

Referencias

#Estafa maestra https://www.youtube.com/watch?v=aHMUs1cGypE&feature=youtu.be ASF datos http://www.asfdatos.gob.mx/

Agenda de Competencia para un ejercicio íntegro en las Contrataciones Públicas https://www.cofece.mx/wp-content/uploads/2018/07/CPC-ContratacionesPublicas.pdf

Reporte de los datos relevantes de los contratos ingresados a CompraNet que iniciaron vigencia 2010-2019 https://sites.google.com/site/cnetuc/contrataciones

XES format
http://www.xes-standard.org/





LOAD CSV WITH HEADERS FROM "file:///companies.csv" AS row CREATE (p:Company {rfc: (row.rfc), name: row.name})

LOAD CSV WITH HEADERS FROM "file:///contracts.csv" AS row CREATE (contract:Contract{ocid:(row.ocid)})

LOAD CSV WITH HEADERS FROM "file:///contacts.csv" AS row CREATE (contact:Contact{contact:(row.contact)})

#Hacer un trim a las direcciones/quitar fechas en blanco
LOAD CSV WITH HEADERS FROM "file:///address.csv" AS row CREATE (address:Address{address:(row.address)})

#Atender los strings de varios correos
LOAD CSV WITH HEADERS FROM "file:///email.csv" AS row CREATE (email:Email{email:(row.email)})

#Atender los strings de varios telefonos
LOAD CSV WITH HEADERS FROM "file:///telephone.csv" AS row CREATE (telephone:Telephone{telephone:(row.telephone)})

CREATE INDEX ON :Company(rfc)

LOAD CSV WITH HEADERS FROM "file:///rcc.csv" AS row MATCH (company:Company { rfc:(row.rfc)}),(contract:Contract { ocid:(row.ocid)}) CREATE (company)-[:PARTICIPATED]->(contract)

LOAD CSV WITH HEADERS FROM "file:///rc.csv" AS row MATCH (company:Company { rfc:(row.rfc)}),(contact:Contact {contact:(row.contact)}) CREATE (company)-[:CONTACT]->(contact)

LOAD CSV WITH HEADERS FROM "file:///ra.csv" AS row MATCH (company:Company { rfc:(row.rfc)}),(address:Address {address:(row.address)}) CREATE (company)-[:ADDRESS]->(address)

LOAD CSV WITH HEADERS FROM "file:///re.csv" AS row MATCH (company:Company { rfc:(row.rfc)}),(email:Email {email:(row.email)}) CREATE (company)-[:EMAIL]->(email)

LOAD CSV WITH HEADERS FROM "file:///rt.csv" AS row MATCH (company:Company { rfc:(row.rfc)}),(telephone:Telephone {telephone:(row.telephone)}) CREATE (company)-[:TELEPHONE]->(telephone)


#Create constrains CREATE CONSTRAINT ON (p:Company) ASSERT p.id IS UNIQUE CREATE CONSTRAINT ON (contract:Contract) ASSERT contract.id IS UNIQUE



MATCH (p1:Company)-[:CONTACT|TELEPHONE*]->(p3)<-[:CONTACT|TELEPHONE*]-(p2:Company) WHERE p1 <> p2 RETURN *

Con p4
MATCH (p5:Contract)<-[:PARTICIPATED*]-(p1:Company)-[:CONTACT|TELEPHONE|ADDRESS*]->(p3)<-[:CONTACT|TELEPHONE|ADDRESS*]-(p2:Company)-[:PARTICIPATED*]->(p6:Contract),(p1)-[:PARTICIPATED*]->(p4:Contract)<-[:PARTICIPATED*]-(p2) WHERE p1 <> p2 AND p5 <> p6 RETURN *


Sin p4
MATCH (p5:Contract)<-[:PARTICIPATED*]-(p1:Company)-[:CONTACT|TELEPHONE|ADDRESS*]->(p3)<-[:CONTACT|TELEPHONE|ADDRESS*]-(p2:Company)-[:PARTICIPATED*]->(p6:Contract),(p1)-[:PARTICIPATED*]->()<-[:PARTICIPATED*]-(p2) WHERE p1 <> p2 AND p5 <> p6 RETURN *


Hallazgos
ocds-07smqs-1520579
Investigar por qué hay correos gubernamentales en los corresos que deberían ser de proveedores

Estas son las empresas que Miriam detectó que tenían accionistas comunes
MATCH (a:Company {name: 'acondicionamiento en potencia y comunicaciones sa de cv'})-[:PARTICIPATED|ADDRESS]->(b)
RETURN a,b


Revisar luego RCF raros y a estas empresas raras
261474206	optimum vehicle logistics llc
101785	optimum vehicle logistics.
1-75-2742183-2	tex-air parts international, ltd
95094	tex-air parts international, ltd
541767149	tesla inc
0	aviation parts executive, inc
80-0696494	aviation international solutions



Grafos para corrupción en anillos
http://www.ijircce.com/upload/2017/february/62_13_A%20Survey.pdf
https://neo4j.com/blog/fraud-rings-graph-databases-infographic/
https://www.researchgate.net/publication/310671750_Rogue_behavior_detection_in_NoSQL_graph_databases
https://www.researchgate.net/publication/307882419_Graph_Analytics_for_Real-time_Scoring_of_Cross-channel_Transactional_Fraud

MATCH (movie:Movie {title:"test"})
OPTIONAL MATCH (movie)-[r]-() 
DELETE movie, r

QUERY QUE FUNCIONA
MATCH (p5:Contract)<-[:PARTICIPATED]-(p1:Company)-[:CONTACT|TELEPHONE|ADDRESS]->(p3)<-[:CONTACT|TELEPHONE|ADDRESS]-(p2:Company)-[:PARTICIPATED]->(p6:Contract),(p1)-[:PARTICIPATED]->(p4:Contract)<-[:PARTICIPATED]-(p2) WHERE p1 <> p2 AND p5 <> p6 RETURN p1,p2 LIMIT 3

RELACIONES
MATCH (c:Company{rfc:"FMA9301181B1"})-[r:EMAIL|ADDRESS|CONTACT|TELEPHONE]-(p)-[r1:EMAIL|ADDRESS|CONTACT|TELEPHONE]-(p1) RETURN *

EMPRESAS FANTASMA
MATCH (c:Company)-[r]-(p) WHERE c.rfc="IBI120525IV9" OR c.rfc="SSC161011DS3" OR c.rfc="APT040201KA5" OR c.rfc="IME101213U98" OR c.rfc="ASS1102093A5" OR c.rfc="LIN140805IN5" OR c.rfc="TPT110803LZ0" OR c.rfc="QAL101119IG2" OR c.rfc="PAG1207103F3" OR c.rfc="CUR1405141F4" OR c.rfc="OCB110707GK1" OR c.rfc="EMS050427V82" OR c.rfc="DCE0908051U8" OR c.rfc="GVI100428IM8" OR c.rfc="GDI010116TK8" OR c.rfc="GSP000616FV4" OR c.rfc="CIG091005317" OR c.rfc="SEN100929MGA" OR c.rfc="CPY110413I37" OR c.rfc="DAR100118G81" OR c.rfc="BAS090909A56" OR c.rfc="ADS101126FL0" OR c.rfc="ING120518NL7" OR c.rfc="GCA110429V28" OR c.rfc="SAM1401219X5" OR c.rfc="ISA120424R79" OR c.rfc="MCC091121EI3" OR c.rfc="IAA1401105ZA" OR c.rfc="GCC120614SA8" OR c.rfc="CIP050715F83" OR c.rfc="EPJ1011206R1" OR c.rfc="OIN140605828" OR c.rfc="CEU150403968" OR c.rfc="CBX150529BJ5" OR c.rfc="HIN131218B16" OR c.rfc="AGC140411FX5" OR c.rfc="HEC1011032L4" OR c.rfc="NNC121031D79" OR c.rfc="FAC130318H39" OR c.rfc="SMB071126NX9" OR c.rfc="CME120425IM4" OR c.rfc="ASC070703P39" OR c.rfc="CJU121105B24" OR c.rfc="PEI1307045BA" OR c.rfc="SAM1411187K9" OR c.rfc="KGI151019BG4" OR c.rfc="AGI1512015H0" OR c.rfc="CAC160129NA3" OR c.rfc="TDI120709PH7" OR c.rfc="MIC101216PV3" OR c.rfc="LBL1505117S1" OR c.rfc="CIV150212586" OR c.rfc="TGO080701TX5" OR c.rfc="COC101213AK9" OR c.rfc="PIE121206VC1" OR c.rfc="GPS980316TI6" OR c.rfc="GRE111110I43" RETURN *
